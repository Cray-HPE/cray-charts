{{- range $.Values.vaultIssuers }}
#
# Job to patch all cert-manager issuers with
# proper ref to run-time secret (API Token) name.
#
apiVersion: batch/v1
kind: Job
metadata:
  name: cert-manager-issuer-{{ .instance }}-patch
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation, hook-succeeded
    helm.sh/hook-weight: "-5"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: kubectl-patch
          image: "{{ $.Values.kubectl.image.repository }}:{{ $.Values.kubectl.image.tag }}"
          imagePullPolicy: "{{ $.Values.kubectl.image.pullPolicy }}"
          command:
            - /bin/sh
            - /bin/entrypoint.sh
          volumeMounts:
            - name: cert-manager-issuer-{{ .instance }}-{{ .namespace }}-patch-volume
              mountPath: /bin/entrypoint.sh
              readOnly: true
              subPath: entrypoint.sh
      volumes:
        - name: cert-manager-issuer-{{ .instance }}-{{ .namespace }}-patch-volume
          configMap:
            defaultMode: 0700
            name: cert-manager-issuer-{{ .instance }}-{{ .namespace }}-patch
      restartPolicy: Never
      serviceAccountName: cert-manager-issuers-patcher
---
#
# Clean up the configmap out of loftsman namespace
#
apiVersion: batch/v1
kind: Job
metadata:
  name: cert-manager-issuer-{{ .instance }}-delete-configmap
  labels:
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/version: {{ $.Chart.AppVersion }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version | replace "+" "_" }}
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation, hook-succeeded
    helm.sh/hook-weight: "0"
    sidecar.istio.io/inject: "false"
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
        - name: kubectl-patch
          image: "{{ $.Values.kubectl.image.repository }}:{{ $.Values.kubectl.image.tag }}"
          imagePullPolicy: "{{ $.Values.kubectl.image.pullPolicy }}"
          command:
            - kubectl
            - delete
            - cm
            - -n
            - {{ $.Release.Namespace }}
            - cert-manager-issuer-{{ .instance }}-{{ .namespace }}-patch
      restartPolicy: Never
      serviceAccountName: cert-manager-issuers-patcher
{{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd-backup-restore
  namespace: operators
spec:
  replicas: {{ .Values.crayEtcdBackup.replicas }}
  strategy:
    {{- .Values.crayEtcdBackup.strategy | toYaml | nindent 4}}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cray-etcd-backup.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cray-etcd-backup.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: "etcd-backup-restore"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values: ["{{ include "cray-etcd-backup.fullname" . }}"]
            topologyKey: kubernetes.io/hostname
      initContainers:
        - name: init
          image: "{{ .Values.crayEtcdBackup.imageRegistry }}/loftsman/docker-kubectl:{{ .Values.crayEtcdBackup.kubectlImageVersion }}"
          command:
            - /bin/sh
            - -c
            - create_aws_creds.sh
          volumeMounts:
            - name: etcd-backup-restore-config
              mountPath: /usr/local/sbin
      containers:
        - name: util
          image: "{{ .Values.crayEtcdBackup.imageRegistry }}/loftsman/docker-kubectl:{{ .Values.crayEtcdBackup.kubectlImageVersion }}"
          command:
            - /bin/sh
            - -c
            - "while true; do sleep 1000; done"
          volumeMounts:
            - name: etcd-backup-restore-config
              mountPath: /usr/local/sbin
            - name: etcd-backup-restore-aws-config
              mountPath: /conf
        - name: boto3
          image: "{{ .Values.crayEtcdBackup.imageRegistry }}/ombu/boto3:{{ .Values.crayEtcdBackup.boto3ImageVersion }}"
          command:
            - /bin/sh
            - -c
            - "while true; do sleep 1000; done"
          volumeMounts:
            - name: etcd-backup-restore-config
              mountPath: /usr/local/sbin
            - name: etcd-backup-restore-aws-config
              mountPath: /conf
      volumes:
        - name: etcd-backup-restore-config
          configMap:
            name: etcd-backup-restore-config
            defaultMode: 0755
        - name: etcd-backup-restore-aws-config
          secret:
            secretName: etcd-backup-restore-aws-config
            optional: true
